<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>drools-wb-scenario-simulation-editor</artifactId>
    <groupId>org.drools</groupId>
    <version>7.35.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>drools-wb-scenario-simulation-editor-kogito-runtime</artifactId>
  <packaging>war</packaging>

  <name>Drools Workbench - Scenario Simulation Editor - Kogito - Runtime Webapp</name>
  <description>Drools Workbench - Scenario Simulation Editor - Kogito - Runtime Webapp</description>

  <properties>
    <errai.jboss.home>${project.build.directory}/wildfly-${version.org.jboss.errai.wildfly}</errai.jboss.home>
    <version.thorntail>2.4.0.Final</version.thorntail>
    <gwt.helper.includes>Client,Marshaller,KogitoEditor,WebappBase</gwt.helper.includes>
    <gwt.helper.rootDirectories>${project.parent.basedir}/</gwt.helper.rootDirectories>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- MANSTIS - EVERYTHING BELOW THIS HAS BEEN _SANITISED_! -->

    <!-- Errai -->
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-ioc</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-common</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-bus</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-ui</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-data-binding</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-marshalling</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-security-server</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-cdi-server</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-cdi-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-cdi-shared</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-cdi-jboss</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-jboss-as-support</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-codegen-gwt</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- GWT/Errai Bean Validation - JSR303 -->
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-validation</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>provided</scope>
      <classifier>sources</classifier>
    </dependency>

    <!-- UberFire JS exporter -->
    <!-- Needed by uberfire-runtime-plugins-client -->
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-js</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- Core UberFire dependencies -->
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>appformer-client-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-client-all</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-backend-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-backend-api</artifactId>
      <scope>provided</scope>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-services-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-client-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-security-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-security-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-simple-docks-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-workbench-processors</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-workbench-client-views-patternfly</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-widgets-properties-editor-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-commons-editor-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-preferences-client</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- UberFire Kogito dependencies -->
    <dependency>
      <groupId>com.google.elemental2</groupId>
      <artifactId>elemental2-promise</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Needed for the ACE SIMULATION_READER Editor -->
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-widgets-core-client</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- UberFire IO -->
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-io</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-nio2-model</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Needed by org.uberfire.java.nio.file.spi.FileSystemProvider -->
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-nio2-jgit</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-nio2-fs</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- END PROVIDERS -->
    <!-- Uberfire Experimentals -->
    <!-- Required by uberfire-workbench-client -->
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-experimental-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-experimental-client</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Core utility classes -->
    <dependency>
      <groupId>org.kie.soup</groupId>
      <artifactId>kie-soup-commons</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Required for workbench startup -->
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-commons</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.activemq</groupId>
          <artifactId>artemis-jms-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.spec.javax.jms</groupId>
          <artifactId>jboss-jms-api_2.0_spec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Generic ui components -->
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-widgets-commons</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-widgets-table</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.workbench.widgets</groupId>
      <artifactId>kie-wb-common-ui</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.uberfire</groupId>
          <artifactId>uberfire-security-management-client</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.kie.workbench.services</groupId>
      <artifactId>kie-wb-common-services-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.workbench.services</groupId>
      <artifactId>kie-wb-common-datamodel-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Required by uberfire-project -->
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-structure-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!--     Required by uberfire-project-client-->
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-preferences-ui-client</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- GWT and extensions -->
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.gwtbootstrap3</groupId>
      <artifactId>gwtbootstrap3</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.gwtbootstrap3</groupId>
      <artifactId>gwtbootstrap3-extras</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.elemental2</groupId>
      <artifactId>elemental2-dom</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Kogito -->
    <dependency>
      <groupId>org.kie.workbench</groupId>
      <artifactId>kie-wb-common-kogito-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-wb-scenario-simulation-editor-kogito-webapp-common</artifactId>
      <scope>provided</scope>
      <exclusions>
            <exclusion>
              <groupId>org.dashbuilder</groupId>
              <artifactId>dashbuilder-services</artifactId>
            </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.kie.workbench</groupId>
      <artifactId>kie-wb-common-kogito-webapp-base</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.workbench</groupId>
      <artifactId>kie-wb-common-kogito-webapp-base</artifactId>
      <scope>provided</scope>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>org.kie.workbench</groupId>
      <artifactId>kie-wb-common-dmn-webapp-kogito-marshaller</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>com.google.gwt.gwtmockito</groupId>
      <artifactId>gwtmockito</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Transient dependencies -->
    <dependency>
      <groupId>org.kie.soup</groupId>
      <artifactId>kie-soup-project-datamodel-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.soup</groupId>
      <artifactId>kie-soup-dataset-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.soup</groupId>
      <artifactId>kie-soup-dataset-api</artifactId>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-message-console-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-widgets-service-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-workbench-models-datamodel-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.workbench.profile</groupId>
      <artifactId>kie-wb-common-profile-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.workbench.profile</groupId>
      <artifactId>kie-wb-common-profile-api</artifactId>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.jsinterop</groupId>
      <artifactId>base</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.jsinterop</groupId>
      <artifactId>jsinterop-annotations</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-workbench-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-commons-editor-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-preferences-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-project-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Scenario Simulation -->
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-wb-scenario-simulation-editor-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>appformer-kogito-bridge</artifactId>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>

    <!-- NEEDED ? -->
    <dependency>
      <groupId>org.dashbuilder</groupId>
      <artifactId>dashbuilder-widgets</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.dashbuilder</groupId>
      <artifactId>dashbuilder-validations</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.dashbuilder</groupId>
      <artifactId>dashbuilder-navigation-client</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.uberfire</groupId>
          <artifactId>uberfire-layout-editor-backend</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.dashbuilder</groupId>
      <artifactId>dashbuilder-renderer-default</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.dashbuilder</groupId>
      <artifactId>dashbuilder-renderer-google</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Add for enforcer -->
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>lienzo-core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.dashbuilder</groupId>
      <artifactId>dashbuilder-displayer-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.dashbuilder</groupId>
      <artifactId>dashbuilder-displayer-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-scenario-simulation-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-wb-scenario-simulation-editor-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-wb-scenario-simulation-editor-kogito-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-message-console-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-wires-core-grids</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.workbench</groupId>
      <artifactId>kie-wb-common-command-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.workbench.widgets</groupId>
      <artifactId>kie-wb-config-resource-widget</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.workbench.widgets</groupId>
      <artifactId>kie-wb-metadata-widget</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-jaxrs-client</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- MARSHALLING -->
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-wb-scenario-simulation-editor-kogito-marshaller</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- END MARSHALLING -->

  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.drools</groupId>
        <artifactId>drools-wb-scenario-simulation-editor-kogito-client</artifactId>
        <version>${version.org.kie}</version>
      </dependency>
      <dependency>
        <groupId>org.dashbuilder</groupId>
        <artifactId>dashbuilder-renderer-google</artifactId>
        <version>2.19.0-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>org.drools</groupId>
        <artifactId>drools-wb-scenario-simulation-editor-kogito-webapp-common</artifactId>
        <scope>provided</scope>
        <version>${version.org.kie}</version>
      </dependency>

      <!-- MARSHALLING -->
      <dependency>
        <groupId>org.drools</groupId>
        <artifactId>drools-wb-scenario-simulation-editor-kogito-marshaller</artifactId>
        <version>${version.org.kie}</version>
      </dependency>
      <dependency>
        <groupId>com.google.jsinterop</groupId>
        <artifactId>base</artifactId>
        <version>1.0.0-beta-1</version>
      </dependency>
      <!-- END MARSHALLING -->

    </dependencies>
  </dependencyManagement>

  <build>
    <finalName>${project.artifactId}</finalName>
    <outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>

    <plugins>
      <!-- Include additional sources path for hot reload -->
      <plugin>
        <groupId>org.kie</groupId>
        <artifactId>kie-gwthelper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <includes>${gwt.helper.includes}</includes> <!-- will include all GWT module whose configuration file name match that pattern -->
              <rootDirectories>${gwt.helper.rootDirectories}</rootDirectories> <!-- will search inside those directories -->
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <configuration>
          <deploy>${project.build.directory}/gwt-symbols-deploy</deploy>
          <localWorkers>4</localWorkers>
          <module>org.drools.workbench.screens.scenariosimulation.webapp.DroolsWorkbenchScenarioSimulationKogitoRuntime</module>
          <extraJvmArgs>-Xmx4096m -Xms1024m -Xss1M -XX:CompileThreshold=7000 -Derrai.dynamic_validation.enabled=true</extraJvmArgs>
          <optimizationLevel>9</optimizationLevel>
          <style>OBFUSCATED</style>
          <logLevel>INFO</logLevel>
          <noServer>false</noServer>
          <server>org.jboss.errai.cdi.server.gwt.EmbeddedWildFlyLauncher</server>
          <disableCastChecking>true</disableCastChecking>
          <runTarget>index.html</runTarget>
          <strict>true</strict>
          <style>PRETTY</style>
          <printJavaCommandOnError>false</printJavaCommandOnError>
          <productionMode>true</productionMode>
          <hostedWebapp>src/main/webapp</hostedWebapp>

          <compileSourcesArtifacts>
            <compileSourcesArtifact>org.kie.soup:kie-soup-commons</compileSourcesArtifact>

            <!-- UberFire -->
            <compileSourcesArtifact>org.uberfire:uberfire-commons</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-nio2-model</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-nio2-model</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-io</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-js</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-security-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-security-client</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-client-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-workbench-client</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-workbench-client-views-patternfly</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-simple-docks-client</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-project-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-project-client</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-services-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-structure-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-message-console-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-message-console-client</compileSourcesArtifact>

            <!-- Errai, Drools etc -->
            <compileSourcesArtifact>org.jboss.errai:errai-data-binding</compileSourcesArtifact>
            <compileSourcesArtifact>org.kie.workbench.widgets:kie-wb-common-ui</compileSourcesArtifact>
            <compileSourcesArtifact>org.kie.workbench.services:kie-wb-common-datamodel-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.kie.workbench.services:kie-wb-common-services-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.kie.workbench:kie-wb-common-kogito-client</compileSourcesArtifact>

            <!-- UF-ext -->
            <compileSourcesArtifact>org.uberfire:uberfire-runtime-plugins-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-commons-editor-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-commons-editor-client</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-widgets-commons</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-widgets-table</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-widgets-properties-editor-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-widgets-properties-editor-client</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-widgets-service-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-widgets-core-client</compileSourcesArtifact>

            <!-- Uberfire Preferences -->
            <compileSourcesArtifact>org.uberfire:uberfire-preferences-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-preferences-client</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-preferences-ui-client</compileSourcesArtifact>

            <!-- Uberfire Experimentals -->
            <compileSourcesArtifact>org.uberfire:uberfire-experimental-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-experimental-client</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-wires-core-grids</compileSourcesArtifact>

            <compileSourcesArtifact>org.uberfire:appformer-client-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:appformer-js-bridge</compileSourcesArtifact>

            <compileSourcesArtifact>org.kie.soup:kie-soup-dataset-api</compileSourcesArtifact>

            <compileSourcesArtifact>org.kie.workbench.widgets:kie-wb-metadata-widget</compileSourcesArtifact>
            <compileSourcesArtifact>org.kie.workbench.widgets:kie-wb-config-resource-widget</compileSourcesArtifact>
            <compileSourcesArtifact>org.kie.workbench:kie-wb-common-command-api</compileSourcesArtifact>
            <!-- drools-wb -->
            <compileSourcesArtifact>org.drools:drools-wb-scenario-simulation-editor-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.drools:drools-scenario-simulation-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.kie.soup:kie-soup-json</compileSourcesArtifact>
            <compileSourcesArtifact>org.dashbuilder:dashbuilder-common-client</compileSourcesArtifact>
            <compileSourcesArtifact>org.dashbuilder:dashbuilder-services-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.kie.soup:kie-soup-dataset-shared</compileSourcesArtifact>
            <compileSourcesArtifact>org.dashbuilder:dashbuilder-dataset-client</compileSourcesArtifact>
            <compileSourcesArtifact>org.dashbuilder:dashbuilder-displayer-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.dashbuilder:dashbuilder-displayer-client</compileSourcesArtifact>
            <!-- DMN Marshaller -->
            <compileSourcesArtifact>org.kie.workbench:kie-wb-common-dmn-webapp-kogito-marshaller</compileSourcesArtifact>
          </compileSourcesArtifacts>
        </configuration>
        <executions>
          <execution>
            <id>gwt-clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
          <execution>
            <id>gwt-compile</id>
            <goals>
              <!-- Do not use 'resources' goal as it does not play well with filtered resources. -->
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <packagingExcludes>**/javax/**/*.*,**/client/**/*.class,**/*.symbolMap,WEB-INF/classes/**</packagingExcludes>
          <archive>
            <addMavenDescriptor>false</addMavenDescriptor>
          </archive>
        </configuration>
      </plugin>

      <!-- Tests are skipped by default because they require additional GWT dependencies. Run mvn with
        -Pintegration-test to enable testing. -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}</directory>
              <includes>
                <include>src/main/webapp/org.drools.workbench.screens.scenariosimulation.webapp.DroolsWorkbenchScenarioSimulationEditorShowcase/</include>
                <include>src/main/webapp/WEB-INF/deploy/</include>
                <include>src/main/webapp/WEB-INF/classes/</include>
                <include>src/main/webapp/WEB-INF/lib/</include>
                <include>src/main/webapp/model/</include>
                <include>src/main/gwt-unitCache</include>
                <include>**/gwt-unitCache/**</include>
                <include>.gwt/**</include>
                <include>.errai/</include>
                <include>.index/**</include>
                <include>**/*.JUnit/**</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-marshaller-js</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/src/main/webapp/model</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.parent.basedir}/drools-wb-scenario-simulation-editor-kogito-marshaller/src/main/resources/org/drools/workbench/scenariosimulation/kogito/marshaller/js/</directory>
                  <includes>
                    <include>**/*.js</include>
                  </includes>
                </resource>
                <resource>
                  <directory>${project.build.directory}/Marshaller/org/kie/workbench/common/dmn/webapp/kogito/marshaller/js</directory>
                  <includes>
                    <include>**/*.js</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>Unpack External Marshaller JS from dependency</id>
            <phase>process-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.kie.workbench</groupId>
                  <artifactId>kie-wb-common-dmn-webapp-kogito-marshaller</artifactId>
                  <version>${version.org.kie}</version>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/Marshaller</outputDirectory>
                  <includes>**/*.js</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

    </plugins>

  </build>

  <profiles>

    <!-- Thorntail profile -->
    <profile>
      <id>thorntail</id>
      <activation>
        <property>
          <name>thorntail</name>
        </property>
      </activation>

      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>io.thorntail</groupId>
            <artifactId>bom-all</artifactId>
            <version>${version.thorntail}</version>
            <scope>import</scope>
            <type>pom</type>
          </dependency>
        </dependencies>
      </dependencyManagement>

      <!-- Factions -->
      <!-- Let Thorntail first discover factions and then add them explicitly -->
      <!-- to include messaging that was not detected automatically -->
      <dependencies>
        <!-- CDI brings in bean-validation, cdi-config, logging, transactions, container and ee -->
        <dependency>
          <groupId>io.thorntail</groupId>
          <artifactId>cdi</artifactId>
        </dependency>
        <!-- Undertow brings in io and request-controller -->
        <dependency>
          <groupId>io.thorntail</groupId>
          <artifactId>undertow</artifactId>
        </dependency>
        <!-- Required by AppFormer's SocialActivities and Git clustering -->
        <dependency>
          <groupId>io.thorntail</groupId>
          <artifactId>messaging</artifactId>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>io.thorntail</groupId>
            <artifactId>thorntail-maven-plugin</artifactId>
            <version>${version.thorntail}</version>
            <executions>
              <execution>
                <id>package</id>
                <goals>
                  <goal>package</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- No need to bring in Wildfly when packaging for Thorntail -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Full profile builds all GWT permutations -->
    <profile>
      <id>fullProfile</id>
      <activation>
        <property>
          <name>full</name>
        </property>
      </activation>
      <properties>
        <gwt.memory.settings>-Xmx3g -Xms1g -Xss1M</gwt.memory.settings>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>gwt-maven-plugin</artifactId>
              <configuration>
                <module>org.drools.workbench.screens.scenariosimulation.webapp.DroolsWorkbenchScenarioSimulationEditorShowcase</module>
                <draftCompile>false</draftCompile>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <!-- profile to disable GWT compilation of webapp (useful in full downstream builds) -->
    <profile>
      <id>no-showcase</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>gwt-maven-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- NEEDED TO GENERATE jacoco.exec -->
    <profile>
      <id>sonarcloud-analysis</id>
      <properties>
        <!-- Excluding the entire webapp folder from coverage statistics. -->
        <sonar.coverage.exclusions>webapp/**/*</sonar.coverage.exclusions>
      </properties>
    </profile>
  </profiles>
</project>